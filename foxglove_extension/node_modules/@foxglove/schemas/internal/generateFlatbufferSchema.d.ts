import { FoxgloveEnumSchema, FoxgloveSchema } from "./types";
export declare const BYTE_VECTOR_FB = "\nnamespace foxglove;\n\n/// Used for nesting byte vectors\ntable ByteVector {\n  data:[uint8];\n}\nroot_type ByteVector;\n";
export declare const TIME_FB = "\nnamespace foxglove;\n\nstruct Time {\n  /// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z\n  sec:uint32;\n  /// Nano-second fractions from 0 to 999,999,999 inclusive\n  nsec:uint32;\n}\n";
export declare const DURATION_FB = "\nnamespace foxglove;\n\nstruct Duration {\n  /// Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive.\n  sec:int32;\n  /// if sec === 0 : -999,999,999 <= nsec <= +999,999,999 \n  /// otherwise sign of sec must match sign of nsec or be 0 and abs(nsec) <= 999,999,999\n  nsec:int32;\n}\n";
export declare function generateFlatbuffers(schema: FoxgloveSchema, nestedEnums: FoxgloveEnumSchema[]): string;
//# sourceMappingURL=generateFlatbufferSchema.d.ts.map