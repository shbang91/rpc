import type { MessageDefinitionField } from "@foxglove/message-definition";
import { FoxgloveMessageSchema } from "./types";
type RosMsgFieldWithDescription = MessageDefinitionField & {
    description?: string;
};
type RosMsgDefinitionWithDescription = {
    originalName: string;
    description?: string;
    /** The name of this message type as used in .msg files (foo_msgs/Bar) */
    rosMsgInterfaceName: string;
    /** The name used to refer to this message type in ROS (foo_msgs/Bar for ROS 1, foo_msgs/msg/Bar for ROS 2) */
    rosFullInterfaceName: string;
    fields: RosMsgFieldWithDescription[];
};
export declare function generateRosMsg(def: RosMsgDefinitionWithDescription, { rosVersion }: {
    rosVersion: 1 | 2;
}): string;
export declare function generateRosMsgDefinition(schema: FoxgloveMessageSchema, { rosVersion }: {
    rosVersion: 1 | 2;
}): RosMsgDefinitionWithDescription;
export declare function generateRosMsgMergedSchema(schema: FoxgloveMessageSchema, { rosVersion }: {
    rosVersion: 1 | 2;
}): string;
export {};
//# sourceMappingURL=generateRos.d.ts.map