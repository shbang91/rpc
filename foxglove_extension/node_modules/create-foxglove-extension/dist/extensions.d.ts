type ExtensionPackageJson = {
    name: string;
    version: string;
    publisher?: string;
};
/**
 * Returns a unique identifier for an extension based on the publisher and package name. The
 * publisher can either be explicitly specified with a "publisher" field or extracted from the
 * "name" field if it contains a namespace such as "@foxglove".
 *
 * This method will throw if any required fields are missing or invalid.
 * @param pkgJson Parsed package.json file
 * @returns An identifier string such as "foxglove.studio-extension-turtlesim"
 */
export declare function getPackageId(pkgJson: ExtensionPackageJson): string;
/**
 * Get the directory name to use for an installed extension
 * @param pkgJson Parsed package.json file
 * @returns A directory name such as "foxglove.studio-extension-turtlesim-1.0.0"
 */
export declare function getPackageDirname(pkgJson: ExtensionPackageJson): string;
/**
 * Separate a package.json "name" field into separate namespace (i.e. @foxglove) and name fields
 * @param name The "name" field from a package.json file
 * @returns An object containing the unprefixed name and the namespace, if present
 */
export declare function parsePackageName(name: string): {
    namespace?: string;
    name: string;
};
export {};
//# sourceMappingURL=extensions.d.ts.map