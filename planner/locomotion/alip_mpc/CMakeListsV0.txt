cmake_minimum_required(VERSION 3.0.0)
project(cassie_mpc_lip VERSION 0.1.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -O3 -DEIGEN_NO_DEBUG -march=native -Wl,--no-as-needed")


# for using casadi
find_package(casadi REQUIRED)

# set casadi include directory
set(CASADI_INCLUDE_DIR /usr/local/include/casadi)

# find casadi library
find_library(CASADI_LIBRARY
    NAMES casadi
    HINTS ${CASADI_INCLUDE_DIR}/../lib $ENV{CASADI_PREFIX}/lib)
    
if(CASADI_LIBRARY)
    set(CASADI_LIBRARIES ${CASADI_LIBRARIES} ${CASADI_LIBRARY})
endif()


# Control Library
set(LIB_CTRL
    ${CMAKE_CURRENT_SOURCE_DIR}/src/NewStep_mpc.cpp)
add_library(ctrl_lib ${LIB_CTRL})
target_include_directories(ctrl_lib PUBLIC 
    ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_link_libraries(ctrl_lib
    ${CASADI_LIBRARIES})

#######################################################################


FILE(GLOB sources "src/*.cpp")
FILE(GLOB headers "include/*.hpp")
FILE(GLOB solvers "src/solvers/mpc/*.so")


add_library(solverslib INTERFACE IMPORTED GLOBAL)
set_property(TARGET solverslib PROPERTY INTERFACE_LINK_LIBRARIES ${solvers})
target_link_libraries(ctrl_lib solverslib)

message("CONTROL LIB: ${ctrl_lib}")


add_library(rpc-dcm-alip-planner ${sources} ${headers} ${solverslib})
target_link_libraries(rpc-dcm-alip-planner PUBLIC rpc-util ctrl_lib)

install(TARGETS rpc-dcm-alip-planner DESTINATION "${INSTALL_LIB_DIR}")
install(FILES ${headers} DESTINATION
    "${INSTALL_INCLUDE_DIR}/planner/locomotion/alip_mpc")
